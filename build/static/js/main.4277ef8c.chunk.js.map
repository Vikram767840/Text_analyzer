{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","border","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","react_default","a","createElement","className","style","classsName","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","concat","mode","react_router_dom","to","title","aria-label","arial-current","aboutText","toggleMode","htmlfor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","Components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4277ef8c.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n  const [myStyle,setMyStyle]=useState({\r\n    color: 'black',\r\n    backgroundColor:'white',\r\n    border: '1px solid white'\r\n\r\n  })\r\n  const [btntext,setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n const  toggleStyle = ()=>{\r\n    if(myStyle.color === 'black'){\r\n      setMyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        border: '1px solid white'\r\n\r\n      })\r\n      setBtnText(\"Enable Light Mode\")\r\n    }\r\n    else\r\n    {\r\n      setMyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n\r\n      })\r\n      setBtnText(\"Enable Dark Mode\")\r\n     \r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n\r\n      <h1 classsName=\"my-3\">About Us</h1>\r\n      \r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n   <div className=\"container my-3\">\r\n   <button onClick={toggleStyle} type =\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n   </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n import PropTypes from 'prop-types'\r\n import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n     \r\n      <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    < div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" arial-current=\"page\" to=\"/\">Home </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      \r\n      \r\n      {/*<form className=\"d-flex\">\r\n        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n  </form>*/}\r\n  <div className={`form-check form-switch text-${props.mode==='light' ? 'dark' :'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n  </div>\r\n    </div>\r\n    </div>\r\n    \r\n  </nav>\r\n  );\r\n}\r\nNavbar.propTypes={title : PropTypes.string.isRequired,aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps={title : 'set title here',aboutText: 'About'}; \r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\"+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n     let newText = text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to lowercase!\",\"success\");\r\n  }    \r\n  const handleClearClick = ()=>{\r\n    let newText ='';\r\n     setText(newText)\r\n     props.showAlert(\"Text Cleared!\",\"success\");\r\n } \r\n   \r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handlecopy = () => {\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to clipboard!\",\"success\");\r\n    }\r\n    \r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n\r\n    const [text,setText]=useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode ==='dark' ? 'white' :'#042743'}}>\r\n         \r\n       <h1>{props.heading}</h1>  \r\n       <div className=\"mb-3\"> \r\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode ==='dark' ? 'grey' :'white',color:props.mode ==='dark' ? 'white' :'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n       </div>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handlecopy}>Copy Text</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove space</button>\r\n\r\n\r\n\r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode ==='dark' ? 'white' :'#042743'}}>\r\n      <h2>your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length}minutes read </p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    \r\n props.alert && <div className= {`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\">\r\n     <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n    </div>\r\n\r\n      \r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\n import TextForm from './Components/TextForm';\n import React, { useState } from 'react';\n import Alert from './Components/Alert';\n \n \n import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n}from \"react-router-dom\";\n \n \n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // wheter dark or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n      })\n      setTimeout (()=>{\n       setAlert(null);\n      },1500);  \n\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enable\",\"sucess\");\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enable\",\"sucess\");\n      document.title = 'TextUtils - light Mode';\n    }\n  }\n\n  \n\n  return (   \n    <>\n\n <Router>\n{/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n{/* <Navbar/>*/}\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n <Alert alert= {alert}/> \n<div className=\"container  my-3\" >\n<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          </Route>\n\n</Switch>     \n</div>\n</Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}